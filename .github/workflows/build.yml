name: Manual Build Android APK

on:
  # Trigger the workflow on push events to the main branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # Use a stable Long-Term Support version of Ubuntu
    runs-on: ubuntu-22.04

    steps:
    # Step 1: Check out your repository code
    - name: Checkout
      uses: actions/checkout@v4

    # Step 2: Set up Java Development Kit (JDK) version 11
    - name: Set up Java 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    # Step 3: Set up Python version 3.9
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    # Step 4: Install all necessary system-level dependencies
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          zip \
          unzip \
          build-essential \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libffi-dev \
          libssl-dev

    # Step 5: Create a virtual environment and install Python packages
    - name: Install Python dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip setuptools
        pip install "cython<3.0.0"
        pip install kivy
        pip install kivymd plyer firebase-admin bcrypt cryptography buildozer

    # Step 6: Run the Buildozer command to build the APK
    - name: Run Buildozer
      # This environment variable automatically accepts the SDK licenses
      env:
        ANDROID_ACCEPT_SDK_LICENSE: "y"
      run: |
        source venv/bin/activate
        buildozer -v android debug

    # Step 7: Upload the generated APK as an artifact
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: eldercare-apk
        path: bin/*.apk